/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.Conexion;
import java.awt.Dimension;
import conexion.Conexion;
import controlador.Ctrl_Proveedor;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import modelo.Proveedor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/**
 * La clase InterGestProveedor gestiona la interfaz de usuario para el manejo de proveedores.
 * 
 * @author Miguel
 * @since 2024-06-07
 */
public class InterGestProveedor extends javax.swing.JInternalFrame {

    /**
     * Constructor de la clase InterGestProveedor.
     */
    public InterGestProveedor() {
        initComponents();
        this.setTitle("Supplier Management");
        this.setSize(new Dimension(700, 320));
        this.CargarTablaProveedores();
        this.getContentPane().setBackground(Color.pink);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Update = new javax.swing.JButton();
        SCompany = new javax.swing.JTextField();
        STlf = new javax.swing.JTextField();
        SAddress = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Supplier = new javax.swing.JTable();
        Search = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setText("Supplier Management");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Company");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 80, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Tlf nº");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 80, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Address");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 80, -1));

        Update.setBackground(new java.awt.Color(153, 255, 153));
        Update.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, 90, -1));

        SCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SCompanyActionPerformed(evt);
            }
        });
        getContentPane().add(SCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, 170, -1));
        getContentPane().add(STlf, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 170, -1));
        getContentPane().add(SAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 170, 170, -1));

        jTable_Supplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_Supplier);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 360, 220));

        Search.setBackground(new java.awt.Color(51, 255, 204));
        Search.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        getContentPane().add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 230, 90, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SCompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SCompanyActionPerformed

    /**
     * Actualiza la información del proveedor.
     * 
     * @param evt Evento de acción del botón
     */
    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        if (SCompany.getText().trim().isEmpty()
                || STlf.getText().trim().isEmpty()
                || SAddress.getText().trim().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Fill all the fields");
        } else {
            Proveedor proveedor = new Proveedor();
            Ctrl_Proveedor controlProveedor = new Ctrl_Proveedor();

            proveedor.setEmpresa(SCompany.getText().trim());

            // Verificar si el teléfono es un número válido y positivo
            try {
                String telefono = STlf.getText().trim();
                if (telefono.length() < 9 || !telefono.matches("\\d+")) {
                    JOptionPane.showMessageDialog(null, "Phone number must be at least 9 digits and positive");
                    return;
                }
                proveedor.setTelefono(telefono);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Phone number must be a valid number");
                return;
            }

            proveedor.setDireccion(SAddress.getText().trim());

            if (controlProveedor.actualizar(proveedor, idproveedor)) {
                JOptionPane.showMessageDialog(null, "Update Successful");
                LimpiarCampos();
                CargarTablaProveedores();
            } else {
                JOptionPane.showMessageDialog(null, "Update Denied");
            }
        }
    }//GEN-LAST:event_UpdateActionPerformed
    /**
     * Busca información de un proveedor.
     * 
     * @param evt Evento de acción del botón
     */
    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        String identityNumber = SCompany.getText();
        if (!identityNumber.isEmpty()) {
            EnviarDatosEmpresaMarcada(identityNumber);
        } else {
            JOptionPane.showMessageDialog(null, "Couldn't find the product");
        }
    }//GEN-LAST:event_SearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SAddress;
    private javax.swing.JTextField SCompany;
    private javax.swing.JTextField STlf;
    private javax.swing.JButton Search;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_Supplier;
    // End of variables declaration//GEN-END:variables

    int idproveedor = 0;
    String empresa = "";
    String telefono = "";
    String direccion = "";

    /**
     * Carga la tabla de proveedores.
     */
    private void CargarTablaProveedores() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select id_proveedor, empresa, telefono, direccion from proveedores";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            model.addColumn("ID");
            model.addColumn("Company");
            model.addColumn("Tlf nº");
            model.addColumn("Addres");

            while (rs.next()) {
                Object fila[] = new Object[4];
                for (int i = 0; i < 4; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }

            InterGestProveedor.jTable_Supplier.setModel(model); // Establecer el modelo en la tabla

            jTable_Supplier.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable_Supplier.getColumnModel().getColumn(1).setPreferredWidth(140);

            InterGestProveedor.jScrollPane1.setViewportView(InterGestProveedor.jTable_Supplier);

            con.close();
        } catch (SQLException e) {
            System.out.println("Error filling the product table:" + e);
        }

        jTable_Supplier.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_Supplier.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    idproveedor = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosProveedorSeleccionado(idproveedor);
                }
            }
        });
    }

    /**
     * Envía los datos del proveedor seleccionado.
     * 
     * @param idproveedor Identificador del proveedor seleccionado
     */
    private void EnviarDatosProveedorSeleccionado(int idproveedor) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement("select * from proveedores where id_proveedor = '" + idproveedor + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                SCompany.setText(rs.getString("Empresa"));
                STlf.setText(rs.getString("Telefono"));
                SAddress.setText(rs.getString("Direccion"));
            }
            con.close();

        } catch (SQLException e) {
            System.out.println("Error selecting the Supplier" + e);
        }
    }

    /**
     * Envía los datos de la empresa marcada.
     * 
     * @param idproveedor Identificador de la empresa marcada
     */
    private void EnviarDatosEmpresaMarcada(String idproveedor) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement("select * from proveedores where empresa = '" + idproveedor + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                SCompany.setText(rs.getString("Empresa"));
                STlf.setText(rs.getString("Telefono"));
                SAddress.setText(rs.getString("Direccion"));
                idproveedor = rs.getString("id_proveedor");
            } else {
                JOptionPane.showMessageDialog(null, "Couldnt find the supplier");
            }
            con.close();

        } catch (SQLException e) {
            System.out.println("Error selecting the Supplier" + e);
            JOptionPane.showMessageDialog(null, "Couldnt find the supplier");
        }
    }

    /**
     * Limpia los campos de texto.
     */
    private void LimpiarCampos() {
        SCompany.setText("");
        STlf.setText("");
        SAddress.setText("");
    }
}
